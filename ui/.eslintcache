[{"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/App.tsx":"1","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/index.js":"2","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-results/pokemon-quiz-results.tsx":"3","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-card/pokemon-card.tsx":"4","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/error-toaster/error-toaster.tsx":"5","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/common/timer/svg-circle/svg-circle.jsx":"6","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz.tsx":"7","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/reportWebVitals.js":"8","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-searcher/pokemon-searcher.tsx":"9","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/common/timer/timer.tsx":"10","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-question/pokemon-quiz-question.tsx":"11","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-start/pokemon-quiz-start.tsx":"12"},{"size":421,"mtime":1610005138329,"results":"13","hashOfConfig":"14"},{"size":592,"mtime":1610005138330,"results":"15","hashOfConfig":"14"},{"size":978,"mtime":1610014785786,"results":"16","hashOfConfig":"14"},{"size":1445,"mtime":1610006515294,"results":"17","hashOfConfig":"14"},{"size":682,"mtime":1608649287418,"results":"18","hashOfConfig":"14"},{"size":1082,"mtime":1610006515290,"results":"19","hashOfConfig":"14"},{"size":5091,"mtime":1610093874558,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1608295153534,"results":"21","hashOfConfig":"14"},{"size":3372,"mtime":1610019134366,"results":"22","hashOfConfig":"14"},{"size":1474,"mtime":1610008603187,"results":"23","hashOfConfig":"14"},{"size":5118,"mtime":1610096038297,"results":"24","hashOfConfig":"14"},{"size":595,"mtime":1610014568754,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ddiqsq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/App.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/index.js",[],["53","54"],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-results/pokemon-quiz-results.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-card/pokemon-card.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/error-toaster/error-toaster.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/common/timer/svg-circle/svg-circle.jsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz.tsx",["55","56","57","58","59","60","61"],"import {timeStamp} from \"console\";\nimport React from \"react\";\nimport {Spinner} from \"react-bootstrap\";\nimport {QuizInterface, QuizQuestionInterface, QuizResponseInterface} from \"../../interfaces/quiz.interface\";\nimport {PokemonCard} from \"../pokemon-card/pokemon-card\";\nimport {PokemonQuizQuestion} from \"./pokemon-quiz-question/pokemon-quiz-question\";\nimport {PokemonQuizResults} from \"./pokemon-quiz-results/pokemon-quiz-results\";\nimport {PokemonQuizStart} from \"./pokemon-quiz-start/pokemon-quiz-start\";\nimport './pokemon-quiz.scss'\n\nenum QuizState {\n    Start = 0,\n    InProgress = 1,\n    Finished = 2\n}\n\ntype IProps = {}\n\ntype IState = {\n    quiz?: QuizInterface\n    currentQuestion: number\n    quizState: number\n    userResponse: QuizResponseInterface,\n    score: number\n}\n\nexport class PokemonQuiz extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = this.initialState()\n\n        this.handleQuestionAnswered = this.handleQuestionAnswered.bind(this);\n        this.handleQuizStart = this.handleQuizStart.bind(this);\n        this.handleQuizStartOver = this.handleQuizStartOver.bind(this);\n    }\n\n\n    initialState() {\n        return {\n            quiz: undefined,\n            currentQuestion: 0,\n            quizState: QuizState.Start,\n            userResponse: {answers: []},\n            score: 0\n        }\n    }\n\n    fetchQuizData() {\n        fetch(`http://localhost:9000/api/quiz`)\n            .then(response => response.json())\n            .then(data => this.setState({\n                    quiz: data\n                })\n            )\n    }\n\n    calculateScoreAndChangeQuizState() {\n        fetch(`http://localhost:9000/api/quiz`,\n            {\n                method: 'POST',\n                body: JSON.stringify(this.state.userResponse),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        ).then(response => response.text())\n            .then(data => {\n                this.setState(() => ({\n                    quizState: QuizState.Finished,\n                    score: Number(data)\n                }))\n            })\n    }\n\n    handleQuestionAnswered(answer: string, usedHints: number) {\n\n        if (this.state.quiz && this.state.currentQuestion + 1 < this.state.quiz?.questions.length) {\n            this.setState((prevState) => ({\n                currentQuestion: prevState.currentQuestion + 1,\n                userResponse: {\n                    answers: prevState.userResponse.answers.concat(\n                        [{\n                            solution: prevState.quiz && prevState.quiz?.questions[prevState.currentQuestion].answer || \"\",\n                            userAnswer: answer,\n                            usedHints: usedHints\n                        }])\n                }\n            }))\n        } else {\n            this.setState((prevState) => ({\n                userResponse: {\n                    answers: prevState.userResponse.answers.concat(\n                        [{\n                            solution: prevState.quiz && prevState.quiz?.questions[prevState.currentQuestion].answer || \"\",\n                            userAnswer: answer,\n                            usedHints: usedHints\n                        }])\n                }\n            }), () => this.calculateScoreAndChangeQuizState())\n        }\n    }\n\n    handleQuizStart() {\n        this.fetchQuizData();\n        this.setState(() => ({quizState: QuizState.InProgress}))\n    }\n\n    handleQuizStartOver() {\n        this.setState(() => (this.initialState()))\n    }\n\n    renderSwitch() {\n        switch (this.state.quizState) {\n            case QuizState.Start:\n                return <PokemonQuizStart handleStartQuiz={this.handleQuizStart}></PokemonQuizStart>\n            case QuizState.InProgress:\n                return (\n                    this.state.quiz === undefined ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner> :\n                        <div>\n                            <p className=\"pokemon-quiz-question-counter\">Question: {this.state.currentQuestion + 1} / {this.state.quiz && this.state.quiz.questions.length}</p>\n                            <PokemonQuizQuestion key={this.state.currentQuestion}\n                                                 questionInfo={this.state.quiz.questions[this.state.currentQuestion]}\n                                                 handleAnsweredQuestion={this.handleQuestionAnswered}>\n                            </PokemonQuizQuestion>\n                        </div>\n\n                )\n            case QuizState.Finished:\n                return <PokemonQuizResults score={this.state.score}\n                                           handleStartOverQuiz={this.handleQuizStartOver}></PokemonQuizResults>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"pokemon-quiz-question\">\n                {this.renderSwitch()}\n            </div>\n        )\n\n    }\n}","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/reportWebVitals.js",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-searcher/pokemon-searcher.tsx",["62"],"import React from \"react\"\nimport { Button, Form } from \"react-bootstrap\"\nimport { PokemonInterface } from \"../../interfaces/pokemon.interface\"\nimport ErrorToaster from \"../error-toaster/error-toaster\"\nimport { PokemonCard } from \"../pokemon-card/pokemon-card\"\nimport './pokemon-searcher.scss'\n\ntype IState = {\n    pokemon?: PokemonInterface,\n    searchText: string,\n    searchDone: boolean,\n    isLoading: boolean,\n    badSearch: boolean,\n}\n\nexport class PokemonSearcher extends React.Component<{}, IState> {\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            pokemon: undefined,\n            searchText: \"\",\n            searchDone: false,\n            isLoading: false,\n            badSearch: false,\n\n        }\n        this.handleInputChanges = this.handleInputChanges.bind(this)\n        this.handleNewSearch = this.handleNewSearch.bind(this)\n        this.handleNewRandomSearch = this.handleNewRandomSearch.bind(this)\n    }\n\n    handleInputChanges(event: any) {\n        this.setState({\n            searchText: event.target.value\n        }\n        )\n    }\n\n    handleNewSearch() {\n        this.setState({ isLoading: true })\n        fetch(`http://localhost:9000/api/pokemon/${this.state.searchText}`)\n            .then(response => response.json())\n            .then(data => this.setState({\n                pokemon: data,\n                searchDone: true,\n                isLoading: false\n            })\n            )\n            .catch(er => this.setState({ badSearch: true }))\n    }\n\n    handleNewRandomSearch() {\n        this.setState({ isLoading: true })\n        fetch(`http://localhost:9000/api/pokemon/random`)\n            .then(response => response.json())\n            .then(data => this.setState({\n                pokemon: data,\n                searchDone: true,\n                isLoading: false\n            }))\n    }\n\n    renderPokemonCard() {\n        if (this.state.pokemon) {\n            return <PokemonCard pokemon={this.state.pokemon} minimized={false} />\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"parent\">\n                <div>\n                    <img\n                        src=\"/pokeball-logo.png\"\n                        width=\"200px\"\n                        className=\"main-image\"\n                    />\n                    <Form className=\"search-input\">\n                        <Form.Group controlId=\"searchCtrl\">\n                            <Form.Control type=\"text\" value={this.state.searchText} placeholder=\"Write a Pokemon name\"\n                                onChange={this.handleInputChanges} />\n                        </Form.Group>\n                    </Form>\n                    <div className=\"button-group\">\n                        <Button className=\"button\" variant=\"secondary\" onClick={this.handleNewRandomSearch}>I'm\n                                Feeling Lucky</Button>{' '}\n                        <Button className=\"button\" variant=\"primary\"\n                            onClick={this.handleNewSearch}>Search</Button>{' '}\n                    </div>\n                </div>\n                {this.state.searchDone ? this.state.isLoading ? <p>Loading...</p> : this.renderPokemonCard() :\n                    <div></div>}\n                {this.state.badSearch ? <ErrorToaster errorMessage=\"This Pokemon does not exist\" /> : <p></p>}\n            </div>\n        );\n    }\n}\n\n","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/common/timer/timer.tsx",["63"],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-question/pokemon-quiz-question.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon-quiz/pokemon-quiz-start/pokemon-quiz-start.tsx",["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":9,"nodeType":"72","messageId":"73","endLine":1,"endColumn":18},{"ruleId":"70","severity":1,"message":"74","line":4,"column":24,"nodeType":"72","messageId":"73","endLine":4,"endColumn":45},{"ruleId":"70","severity":1,"message":"75","line":5,"column":9,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":85,"column":54,"nodeType":"78","messageId":"79","endLine":85,"endColumn":56},{"ruleId":"76","severity":1,"message":"77","line":85,"column":117,"nodeType":"78","messageId":"79","endLine":85,"endColumn":119},{"ruleId":"76","severity":1,"message":"77","line":96,"column":54,"nodeType":"78","messageId":"79","endLine":96,"endColumn":56},{"ruleId":"76","severity":1,"message":"77","line":96,"column":117,"nodeType":"78","messageId":"79","endLine":96,"endColumn":119},{"ruleId":"80","severity":1,"message":"81","line":73,"column":21,"nodeType":"82","endLine":77,"endColumn":23},{"ruleId":"70","severity":1,"message":"83","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"84","line":2,"column":17,"nodeType":"72","messageId":"73","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":16,"column":17,"nodeType":"82","endLine":18,"endColumn":19},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'timeStamp' is defined but never used.","Identifier","unusedVar","'QuizQuestionInterface' is defined but never used.","'PokemonCard' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]