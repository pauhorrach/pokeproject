[{"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/reportWebVitals.js":"1","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/App.tsx":"2","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/index.js":"3","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon/pokemon.tsx":"4","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/header/header.tsx":"5","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/error-toaster/error-toaster.tsx":"6","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/images-carousel/images-carousel.tsx":"7"},{"size":362,"mtime":1608295153534,"results":"8","hashOfConfig":"9"},{"size":3760,"mtime":1608656631133,"results":"10","hashOfConfig":"9"},{"size":547,"mtime":1608625685749,"results":"11","hashOfConfig":"9"},{"size":962,"mtime":1608651490252,"results":"12","hashOfConfig":"9"},{"size":238,"mtime":1608594504319,"results":"13","hashOfConfig":"9"},{"size":682,"mtime":1608649287418,"results":"14","hashOfConfig":"9"},{"size":753,"mtime":1608651534635,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ddiqsq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/reportWebVitals.js",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/App.tsx",["32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Pokemon, {IPokemon} from \"./components/pokemon/pokemon\";\nimport Header from \"./components/header/header\";\nimport {Button, Form} from 'react-bootstrap';\nimport ErrorToaster from \"./components/error-toaster/error-toaster\";\n\n\ninterface IProps {\n}\n\ninterface IState {\n    name: string,\n    id: Number,\n    images: string[],\n    searchDone: boolean,\n    isLoading: boolean,\n    badSearch: boolean,\n}\n\nclass App extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        this.state = {\n            name: '',\n            id: 0,\n            images: [],\n            searchDone: false,\n            isLoading: false,\n            badSearch: false,\n\n        }\n        this.handleInputChanges = this.handleInputChanges.bind(this)\n        this.handleNewSearch = this.handleNewSearch.bind(this)\n        this.handleNewRandomSearch = this.handleNewRandomSearch.bind(this)\n    }\n\n    handleInputChanges(event: any) {\n        this.setState({\n                id: Number.NaN, images: [], name: event.target.value, searchDone: false\n            }\n        )\n    }\n\n    handleNewSearch() {\n        this.setState({isLoading: true})\n        fetch(`http://localhost:9000/api/pokemon/${this.state.name}`)\n            .then(response => response.json())\n            .then(data => this.setState({\n                    name: data.name,\n                    id: data.id,\n                    images: data.images,\n                    searchDone: true,\n                    isLoading: false\n                })\n            )\n            .catch(er => this.setState({badSearch: true}))\n    }\n\n    handleNewRandomSearch() {\n        this.setState({isLoading: true})\n        fetch(`http://localhost:9000/api/pokemon/random`)\n            .then(response => response.json())\n            .then(data => this.setState({\n                name: data.name,\n                id: data.id,\n                images: data.images,\n                searchDone: true,\n                isLoading: false\n            }))\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <div className=\"parent\">\n                    <div>\n                        <Form className=\"search-input\">\n                            <Form.Group controlId=\"searchCtrl\">\n                                <Form.Label>Find a Pokemon</Form.Label>\n                                <Form.Control type=\"text\" value={this.state.name} placeholder=\"Write a Pokemon name\"\n                                              onChange={this.handleInputChanges}/>\n                                <Form.Text className=\"text-muted\">\n                                    *You can also write an ID\n                                </Form.Text>\n                            </Form.Group>\n                        </Form>\n                        <div className=\"button-group\">\n                            <Button className=\"button\" variant=\"secondary\" onClick={this.handleNewRandomSearch}>I'm\n                                Feeling Lucky</Button>{' '}\n                            <Button className=\"button\" variant=\"primary\"\n                                    onClick={this.handleNewSearch}>Search</Button>{' '}\n                        </div>\n                    </div>\n                    {this.state.searchDone ? this.state.isLoading ? <p>Loading...</p> :\n                        <Pokemon name={this.state.name} id={this.state.id} images={this.state.images}/> :\n                        <div></div>}\n                </div>\n                {this.state.badSearch ? <ErrorToaster errorMessage=\"This Pokemon does not exist\" /> : <p></p>}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/index.js",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/pokemon/pokemon.tsx",["34","35","36"],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/header/header.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/error-toaster/error-toaster.tsx",[],"/Users/phorrach/Documents/TestProjects/PokeProject/pokeproject/ui/src/components/images-carousel/images-carousel.tsx",["37"],"import React from 'react'\nimport {Carousel} from \"react-bootstrap\";\n\ninterface IProps {\n    images: string[]\n}\n\ninterface IState {\n}\n\nclass ImagesCarousel extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {}\n    }\n\n    createCarouselItem(image: string) {\n        return (\n            <Carousel.Item key={image}>\n                <img\n                    className=\"d-block w-100\"\n                    src={image}\n                />\n            </Carousel.Item>\n        )\n    }\n\n    render() {\n        return (\n            <Carousel>\n                {this.props.images.map(image => this.createCarouselItem(image))}\n            </Carousel>\n        )\n    }\n}\n\nexport default ImagesCarousel",{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":4,"column":18,"nodeType":"40","messageId":"41","endLine":4,"endColumn":26},{"ruleId":"38","severity":1,"message":"43","line":11,"column":11,"nodeType":"40","messageId":"41","endLine":11,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":34,"column":36,"nodeType":"46","messageId":"47","endLine":34,"endColumn":38},{"ruleId":"44","severity":1,"message":"45","line":34,"column":53,"nodeType":"46","messageId":"47","endLine":34,"endColumn":55},{"ruleId":"48","severity":1,"message":"49","line":21,"column":17,"nodeType":"50","endLine":24,"endColumn":19},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'IPokemon' is defined but never used.","'IProps' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]